{"version":3,"sources":["components/AddCategories.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","valueInput","setvalueInput","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAkCeA,EA/BO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAgBzC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAO,IACjBP,GAAe,SAAAQ,GAAI,OAAON,GAAP,mBAAsBM,OACzCL,EAAc,OAMd,2BACIM,KAAK,OACLC,MAAQR,EACRS,SAjBc,SAACN,GACvBF,EAAeE,EAAEO,OAAOF,YCIjBG,EAVK,SAAC,GAAwB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAE9B,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCPJK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAaZY,GAbY,4CAAH,sDC4BLK,EAxBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECAN,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WACNjB,EAASC,GACJiB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEf,UAEZ,CAACb,IAEIc,EDjB0BM,CAAcpB,GAAlCU,EAFiB,EAEtBJ,KAAaO,EAFS,EAETA,QAErB,OACI,oCACI,wBAAIjB,UAAU,qCAAsCI,GAElDa,GAAW,yCAEb,yBAAKjB,UAAU,aAEPc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAY,IAAMZ,EAAIhB,IACLgB,UEMda,EArBM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,oCACE,4CACA,kBAAC,EAAD,CAAeA,cAAgBA,IAC/B,6BACA,4BACM4C,EAAWf,KAAK,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACEqB,IAAMrB,EACNA,SAAWA,U,YCX/BwB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.4ca9555a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategories = ({ setCategories }) => {\n    \n    const [valueInput, setvalueInput] = useState('');\n\n    const handleInputChange = (e) => {\n        setvalueInput( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(valueInput.length>2){\n            setCategories( cats => [  valueInput, ...cats ]  );\n            setvalueInput('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ valueInput }\n                onChange={ handleInputChange }\n            ></input>\n        </form>\n    )\n}\n\nAddCategories.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategories\n","import React from 'react'\n\nconst GifGridItem = ({ id, title, url } ) => {\n    \n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={ url } alt={ title } ></img>\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=W4EoZ441isDNRUk406sI7oQw4XTuboiX`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>      \n\n            { loading && <p>Loading...</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => \n                        <GifGridItem \n                        key={ img.id }\n                        { ...img }\n                        />\n                        )\n                    }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs( category )\n            .then( imgs => {\n                setTimeout(()=>{\n                    setstate({\n                        data: imgs,\n                        loading: false\n                    })\n                },1000)\n            });\n    },[category]);\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport AddCategories from './components/AddCategories';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n          <h2>GifExpertApp</h2>  \n          <AddCategories setCategories={ setCategories }/>\n          <hr/>\n          <ol>\n              { categories.map( category => \n                  <GifGrid \n                    key={ category }\n                    category={ category }\n                  />\n              )}\n          </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}